<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="52" passed="51" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-10T20:26:29 IST" name="Suite" finished-at="2022-07-10T20:27:22 IST" duration-ms="52978">
    <groups>
    </groups>
    <test started-at="2022-07-10T20:26:29 IST" name="Test" finished-at="2022-07-10T20:27:22 IST" duration-ms="52978">
      <class name="test.TestCarInsurancePage">
        <test-method is-config="true" signature="setUpBrowser()[pri:0, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:26:29 IST" name="setUpBrowser" finished-at="2022-07-10T20:26:31 IST" duration-ms="1219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowser -->
        <test-method is-config="true" signature="openPage()[pri:0, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:26:31 IST" name="openPage" finished-at="2022-07-10T20:26:33 IST" depends-on-methods="test.TestCarInsurancePage.setUpBrowser" duration-ms="2247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openPage -->
        <test-method is-config="true" signature="retrieveData()[pri:0, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:26:33 IST" name="retrieveData" finished-at="2022-07-10T20:26:33 IST" depends-on-methods="test.TestCarInsurancePage.openPage" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- retrieveData -->
        <test-method signature="testCarInsuranceIcon()[pri:1, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:06 IST" name="testCarInsuranceIcon" finished-at="2022-07-10T20:27:07 IST" duration-ms="1148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCarInsuranceIcon -->
        <test-method signature="testProceedButton()[pri:2, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:07 IST" name="testProceedButton" finished-at="2022-07-10T20:27:08 IST" duration-ms="1191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProceedButton -->
        <test-method signature="testCityIcon()[pri:3, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:08 IST" name="testCityIcon" finished-at="2022-07-10T20:27:09 IST" duration-ms="272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCityIcon -->
        <test-method signature="testCityDistrictCode()[pri:4, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:09 IST" name="testCityDistrictCode" finished-at="2022-07-10T20:27:09 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCityDistrictCode -->
        <test-method signature="testCarIcons()[pri:5, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:09 IST" name="testCarIcons" finished-at="2022-07-10T20:27:09 IST" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCarIcons -->
        <test-method signature="testCarModelIcons()[pri:6, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:09 IST" name="testCarModelIcons" finished-at="2022-07-10T20:27:10 IST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCarModelIcons -->
        <test-method signature="testSelectCarFuelType()[pri:7, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:10 IST" name="testSelectCarFuelType" finished-at="2022-07-10T20:27:10 IST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectCarFuelType -->
        <test-method signature="testForAutomaticVariant()[pri:8, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:10 IST" name="testForAutomaticVariant" finished-at="2022-07-10T20:27:10 IST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForAutomaticVariant -->
        <test-method signature="testForAllVariant()[pri:9, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:10 IST" name="testForAllVariant" finished-at="2022-07-10T20:27:10 IST" duration-ms="61" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForAllVariant -->
        <test-method signature="testForManualVariant()[pri:10, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:10 IST" name="testForManualVariant" finished-at="2022-07-10T20:27:11 IST" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForManualVariant -->
        <test-method signature="testSelectCarVariant()[pri:11, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:11 IST" name="testSelectCarVariant" finished-at="2022-07-10T20:27:11 IST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectCarVariant -->
        <test-method signature="testSelectAnyYear()[pri:12, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:11 IST" name="testSelectAnyYear" finished-at="2022-07-10T20:27:11 IST" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectAnyYear -->
        <test-method signature="testWriteInvalidFullName()[pri:13, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:11 IST" name="testWriteInvalidFullName" finished-at="2022-07-10T20:27:11 IST" duration-ms="326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteInvalidFullName -->
        <test-method signature="testWriteInvalidEmail()[pri:14, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:11 IST" name="testWriteInvalidEmail" finished-at="2022-07-10T20:27:11 IST" duration-ms="106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteInvalidEmail -->
        <test-method signature="testWriteInvalidPhoneNumber()[pri:15, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:11 IST" name="testWriteInvalidPhoneNumber" finished-at="2022-07-10T20:27:11 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteInvalidPhoneNumber -->
        <test-method signature="testViewPriceInvalidDetails()[pri:16, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:11 IST" name="testViewPriceInvalidDetails" finished-at="2022-07-10T20:27:12 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testViewPriceInvalidDetails -->
        <test-method signature="testGetEmailErrorMessage()[pri:17, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:12 IST" name="testGetEmailErrorMessage" finished-at="2022-07-10T20:27:12 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEmailErrorMessage -->
        <test-method signature="testValidDetails()[pri:18, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:12 IST" name="testValidDetails" finished-at="2022-07-10T20:27:14 IST" duration-ms="2481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestCarInsurancePage@6b52dd31]" started-at="2022-07-10T20:27:14 IST" name="tearDown" finished-at="2022-07-10T20:27:18 IST" duration-ms="4173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestCarInsurancePage -->
      <class name="test.TestTravelInsurancePage">
        <test-method is-config="true" signature="openPage()[pri:0, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:26:36 IST" name="openPage" finished-at="2022-07-10T20:26:38 IST" duration-ms="2178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openPage -->
        <test-method signature="clickTravelInsurance()[pri:1, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:26:51 IST" name="clickTravelInsurance" finished-at="2022-07-10T20:26:52 IST" duration-ms="160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTravelInsurance -->
        <test-method signature="enterRightDestination()[pri:2, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:26:52 IST" name="enterRightDestination" finished-at="2022-07-10T20:26:54 IST" duration-ms="2901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterRightDestination -->
        <test-method signature="selectRightDestination()[pri:3, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:26:54 IST" name="selectRightDestination" finished-at="2022-07-10T20:26:55 IST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectRightDestination -->
        <test-method signature="enterWrongDestination()[pri:4, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:26:55 IST" name="enterWrongDestination" finished-at="2022-07-10T20:26:55 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterWrongDestination -->
        <test-method signature="selectWrongDestination()[pri:5, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:26:55 IST" name="selectWrongDestination" finished-at="2022-07-10T20:27:00 IST" duration-ms="5084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectWrongDestination -->
        <test-method signature="enterDigitsDestination()[pri:6, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:00 IST" name="enterDigitsDestination" finished-at="2022-07-10T20:27:00 IST" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterDigitsDestination -->
        <test-method signature="enterEmptyDestination()[pri:7, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:00 IST" name="enterEmptyDestination" finished-at="2022-07-10T20:27:00 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterEmptyDestination -->
        <test-method signature="openTravelDurationPage()[pri:8, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:00 IST" name="openTravelDurationPage" finished-at="2022-07-10T20:27:00 IST" duration-ms="270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTravelDurationPage -->
        <test-method signature="setDuration()[pri:9, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:00 IST" name="setDuration" finished-at="2022-07-10T20:27:01 IST" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDuration -->
        <test-method signature="openTravellerPage()[pri:10, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:01 IST" name="openTravellerPage" finished-at="2022-07-10T20:27:02 IST" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openTravellerPage -->
        <test-method signature="openMedicalPage()[pri:11, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:02 IST" name="openMedicalPage" finished-at="2022-07-10T20:27:02 IST" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openMedicalPage -->
        <test-method signature="openContactPage()[pri:12, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:02 IST" name="openContactPage" finished-at="2022-07-10T20:27:02 IST" duration-ms="532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openContactPage -->
        <test-method signature="viewPlanNoContact()[pri:13, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:02 IST" name="viewPlanNoContact" finished-at="2022-07-10T20:27:02 IST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewPlanNoContact -->
        <test-method signature="viewPlanPage()[pri:14, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:02 IST" name="viewPlanPage" finished-at="2022-07-10T20:27:03 IST" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewPlanPage -->
        <test-method signature="applyFilter()[pri:15, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:03 IST" name="applyFilter" finished-at="2022-07-10T20:27:05 IST" duration-ms="2295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyFilter -->
        <test-method signature="applySort()[pri:16, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:05 IST" name="applySort" finished-at="2022-07-10T20:27:06 IST" duration-ms="642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applySort -->
        <test-method signature="getCardName()[pri:17, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:06 IST" name="getCardName" finished-at="2022-07-10T20:27:06 IST" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCardName -->
        <test-method signature="getCardPrice()[pri:18, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:06 IST" name="getCardPrice" finished-at="2022-07-10T20:27:06 IST" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCardPrice -->
        <test-method signature="getInfo()[pri:19, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:06 IST" name="getInfo" finished-at="2022-07-10T20:27:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getInfo -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestTravelInsurancePage@6a937336]" started-at="2022-07-10T20:27:18 IST" name="tearDown" finished-at="2022-07-10T20:27:22 IST" duration-ms="4139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestTravelInsurancePage -->
      <class name="test.TestHealthInsurancePage">
        <test-method is-config="true" signature="setUpBrowser()[pri:0, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:33 IST" name="setUpBrowser" finished-at="2022-07-10T20:26:34 IST" duration-ms="1286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBrowser -->
        <test-method is-config="true" signature="openPage()[pri:0, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:34 IST" name="openPage" finished-at="2022-07-10T20:26:36 IST" depends-on-methods="test.TestHealthInsurancePage.setUpBrowser" duration-ms="1779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openPage -->
        <test-method signature="clickHealthInsurance()[pri:1, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:38 IST" name="clickHealthInsurance" finished-at="2022-07-10T20:26:40 IST" duration-ms="1563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickHealthInsurance -->
        <test-method signature="clickSubmit()[pri:2, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:40 IST" name="clickSubmit" finished-at="2022-07-10T20:26:40 IST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSubmit -->
        <test-method signature="selectAgeYoung()[pri:3, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:40 IST" name="selectAgeYoung" finished-at="2022-07-10T20:26:40 IST" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAgeYoung -->
        <test-method signature="selectAgeOld()[pri:4, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:40 IST" name="selectAgeOld" finished-at="2022-07-10T20:26:40 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAgeOld -->
        <test-method signature="openCityPage()[pri:5, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:40 IST" name="openCityPage" finished-at="2022-07-10T20:26:40 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openCityPage -->
        <test-method signature="enterPinCode()[pri:6, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:40 IST" name="enterPinCode" finished-at="2022-07-10T20:26:40 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterPinCode -->
        <test-method signature="enterCity()[pri:7, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:40 IST" name="enterCity" finished-at="2022-07-10T20:26:41 IST" duration-ms="189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterCity -->
        <test-method signature="selectCity()[pri:8, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:41 IST" name="selectCity" finished-at="2022-07-10T20:26:41 IST" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCity -->
        <test-method signature="selectGender()[pri:9, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:41 IST" name="selectGender" finished-at="2022-07-10T20:26:41 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectGender -->
        <test-method signature="enterName()[pri:10, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:41 IST" name="enterName" finished-at="2022-07-10T20:26:41 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterName -->
        <test-method signature="enterNumber()[pri:11, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:41 IST" name="enterNumber" finished-at="2022-07-10T20:26:41 IST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterNumber -->
        <test-method signature="viewMedicalHistoryPage()[pri:12, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:41 IST" name="viewMedicalHistoryPage" finished-at="2022-07-10T20:26:41 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewMedicalHistoryPage -->
        <test-method signature="checkNoDisease()[pri:13, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:41 IST" name="checkNoDisease" finished-at="2022-07-10T20:26:46 IST" duration-ms="5038" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#ped_last"}
  (Session info: chrome=103.0.5060.114)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-PFNGT10', ip: '192.168.29.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1faa9c3c0dfef138c69626747e4c4bc8, findElement {using=id, value=ped_last}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 103.0.5060.53 (a1711811edd7..., userDataDir: C:\Users\plymouth.015\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:59940}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59940/devtoo..., se:cdpVersion: 103.0.5060.114, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1faa9c3c0dfef138c69626747e4c4bc8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#ped_last"}
  (Session info: chrome=103.0.5060.114)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.3.0', revision: 'a4995e2c09*'
System info: host: 'DESKTOP-PFNGT10', ip: '192.168.29.153', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1faa9c3c0dfef138c69626747e4c4bc8, findElement {using=id, value=ped_last}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 103.0.5060.53 (a1711811edd7..., userDataDir: C:\Users\plymouth.015\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:59940}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59940/devtoo..., se:cdpVersion: 103.0.5060.114, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 1faa9c3c0dfef138c69626747e4c4bc8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:387)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:379)
at pages.HealthInsurancePage.checkWithNoDisease(HealthInsurancePage.java:91)
at test.TestHealthInsurancePage.checkNoDisease(TestHealthInsurancePage.java:102)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNoDisease -->
        <test-method signature="checkAnyDisease()[pri:14, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:46 IST" name="checkAnyDisease" finished-at="2022-07-10T20:26:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAnyDisease -->
        <test-method signature="getPlansInfo()[pri:15, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:26:46 IST" name="getPlansInfo" finished-at="2022-07-10T20:26:51 IST" duration-ms="5059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPlansInfo -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestHealthInsurancePage@60bd273d]" started-at="2022-07-10T20:27:18 IST" name="tearDown" finished-at="2022-07-10T20:27:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestHealthInsurancePage -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
